#!/bin/bash

declare -A icons=(
    ["archlinux"]="archlinux-symbolic"
    ["debian"]="debian-symbolic"
    ["ubuntu"]="ubuntu-symbolic"
    ["kali"]="kali-linux-symbolic"
)

to_lowercase() {
    echo "$1" | tr '[:upper:]' '[:lower:]'
}

list_containers () {
    lxc list -c ns,image.os,image.release -fcsv
}

enable_markup () {
    echo -en "\0markup-rows\x1ftrue\n"
}

get_os_markup() {
    local image="$1"
    local release="$2"
    echo "<small>(<i>${image^} ${release^}</i>)</small>"
}

is_container_running() {
    local lowercase_status="$(echo "$1" | tr '[:upper:]' '[:lower:]')"
    [[ "running" =~  $lowercase_status ]]
}

get_icon() {
    local image=$(to_lowercase "$1")
    echo "${icons[$image]:-tux-symbolic}"
}

function print_container_entry() {
    local container_info="$1"
    local container, status, image, release
    read -r container status image release <<<"$(echo "$container_info" | tr ',' ' ')"
    local icon="$(get_icon "$image")"
    local os_markup="$(get_os_markup "$image" "$release")"
    echo -en "$container $os_markup\t\t$status\0info\x1f$container,$status\x1ficon\x1f$icon\n";
}

if [ "$ROFI_RETV" = 0 ]; then
    enable_markup
    for container_info in $(list_containers); do
        print_container_entry "$container_info"
    done
elif [ "$ROFI_RETV" = 1 ]; then
    local container, status 
    read -r container status <<<"$(echo "$ROFI_INFO" | tr ',' ' ')"

    if [[ ! $(is_container_running "$status") ]]; then
        lxc start $container
    fi
    # NOTE: you need to resize the window after opening the new terminal for
    # terminal apps to scale correctly (i.e., take up the entire terminal).
    # This is most likely due to termite not getting a chance to calculate its
    # size before attaching to the container (or something like this), I
    # couldn't find a fix yet
    coproc (rofi-sensible-terminal -e "enter $container" > /dev/null 2>&1)
fi
